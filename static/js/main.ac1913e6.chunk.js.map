{"version":3,"sources":["pages/HomePage.js","components/CreateEventModal.js","pages/Profile.js","components/SignIn.js","components/SignUp.js","components/Header.js","components/Footer.js","components/UpdateEvent.js","pages/ContactUs.js","pages/About.js","pages/EventsPage.js","App.js","index.js"],"names":["HomePage","events","setEvents","useState","filteredEvents","setFilteredEvents","registeredEvents","setRegisteredEvents","storedEvents","localStorage","getItem","JSON","parse","searchParams","setSearchParams","title","type","location","date","selectedCategory","setSelectedCategory","selectedDateFilter","setSelectedDateFilter","searchFilteredEvents","setSearchFilteredEvents","dateFilteredEvents","setDateFilteredEvents","isDateFilterActive","setIsDateFilterActive","eventTypes","dateFilter","setDateFilter","useEffect","fetch","then","response","json","data","catch","error","console","handleInputChange","e","name","value","target","prevParams","_objectSpread","handleRegister","async","userId","method","headers","body","stringify","eventId","ok","prev","alert","errorData","message","filtered","filter","event","today","Date","eventDate","toDateString","tomorrow","setDate","getDate","weekendStart","getDay","weekendEnd","React","createElement","Fragment","className","onChange","placeholder","map","index","key","onClick","handleSearch","matchesTitle","toLowerCase","includes","matchesType","matchesLocation","matchesDate","length","isRegistered","id","progressPercent","attendees","maxAttendees","src","image","alt","price","aria-hidden","audience","style","width","concat","disabled","_ref","weekStart","weekEnd","handleDateFilter","document","querySelector","scrollBy","left","behavior","CreateEventModal","onClose","onEventCreated","formData","setFormData","deadline","description","prevData","onSubmit","preventDefault","eventDataWithOrganizer","organizerId","parseInt","newEvent","htmlFor","required","rows","Profile","userData","setUserData","userEvents","setUserEvents","loading","setLoading","setError","isModalOpen","setIsModalOpen","isUpdateModalOpen","setIsUpdateModalOpen","eventToUpdate","setEventToUpdate","navigate","useNavigate","warn","Error","allEventsResponse","userOrganizedEvents","fetchUserData","eventPromises","eventRegistrations","registration","res","Promise","all","fetchRegisteredEvents","userType","handleOpenCreateModal","handleCloseCreateModal","prevEvents","handleCloseUpdateModal","updatedEvent","existingEvent","handleOpenUpdateModal","handleDeleteEvent","SignInModal","setIsLoggedIn","setUserName","email","password","user","find","log","setItem","SignUpModal","Header","isSignInOpen","setIsSignInOpen","isSignUpOpen","setIsSignUpOpen","isLoggedIn","userName","setUserType","storedUserType","Link","to","handleLogout","removeItem","handleSignInClick","handleSignUpClick","Footer","href","getFullYear","UpdateEvent","useParams","eventData","setEventData","fetchEvent","ContactUs","form","useRef","ref","emailjs","sendForm","current","result","reset","FontAwesomeIcon","icon","faEnvelope","faPhone","faMapMarkerAlt","height","border","allowFullScreen","referrerPolicy","About","activeIndex","setActiveIndex","items","FaCalendarCheck","FaUsers","FaChartLine","FaTrophy","prevSlide","prevIndex","item","offset","isCenter","transform","zIndex","opacity","nextSlide","EventsPage","selectedDate","setSelectedDate","Calendar","category","handleCategoryChange","resetFilters","App","setUserId","showModal","setShowModal","isSignUp","setIsSignUp","savedUserId","handleCloseModal","Router","Routes","Route","path","element","SignIn","SignUp","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.ac1913e6.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst HomePage = () => {\r\n  const [events, setEvents] = useState([]);\r\n  const [filteredEvents, setFilteredEvents] = useState([]);\r\n  const [registeredEvents, setRegisteredEvents] = useState(() => {\r\n    const storedEvents = localStorage.getItem(\"registeredEvents\");\r\n    return storedEvents ? JSON.parse(storedEvents) : [];\r\n  });\r\n  const [searchParams, setSearchParams] = useState({\r\n    title: \"\",\r\n    type: \"\",\r\n    location: \"\",\r\n    date: \"\",\r\n  });\r\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\r\n  const [selectedDateFilter, setSelectedDateFilter] = useState(\"\");\r\n  const [searchFilteredEvents, setSearchFilteredEvents] = useState([]);\r\n  const [dateFilteredEvents, setDateFilteredEvents] = useState([]);\r\n  const [isDateFilterActive, setIsDateFilterActive] = useState(false);\r\n  const eventTypes = [\r\n    \"Competition\",\r\n    \"Event\",\r\n    \"Networking\",\r\n    \"Seminar\",\r\n    \"Sports\",\r\n  ];\r\n  const locations = [\r\n    \"ACT Hall\",\r\n    \"Library\",\r\n    \"Library Auditorium\",\r\n    \"Sports Hall\",\r\n    \"Techolab\",\r\n  ];\r\n  const [dateFilter, setDateFilter] = useState(\"Today\");\r\n\r\n  // Fetch all events on page load\r\n  useEffect(() => {\r\n    fetch(\r\n      \"https://jihceventsapi-hpdng8h8e7eqhdbm.canadacentral-01.azurewebsites.net/api/events\"\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setEvents(data);\r\n        setFilteredEvents(data);\r\n      })\r\n      .catch((error) => console.error(\"Error fetching events:\", error));\r\n  }, []);\r\n\r\n  // Handle input change for search\r\n\r\n  // Handle search functionality\r\n  const handleSearch = () => {\r\n    const filtered = events.filter((event) => {\r\n      const matchesTitle =\r\n        searchParams.title === \"\" ||\r\n        event.title.toLowerCase().includes(searchParams.title.toLowerCase());\r\n      const matchesType =\r\n        searchParams.type === \"\" || event.type === searchParams.type;\r\n      const matchesLocation =\r\n        searchParams.location === \"\" ||\r\n        event.location === searchParams.location;\r\n      const matchesDate =\r\n        searchParams.date === \"\" || event.date === searchParams.date;\r\n\r\n      return matchesTitle && matchesType && matchesLocation && matchesDate;\r\n      setSearchFilteredEvents(filtered);\r\n      setIsDateFilterActive(false);\r\n    });\r\n\r\n    setFilteredEvents(filtered);\r\n  };\r\n  const handleDateFilter = (filter) => {\r\n    const today = new Date();\r\n    const filtered = events.filter((event) => {\r\n      const eventDate = new Date(event.date);\r\n      if (filter === \"Today\") {\r\n        return eventDate.toDateString() === today.toDateString();\r\n      }\r\n      if (filter === \"Tomorrow\") {\r\n        const tomorrow = new Date(today);\r\n        tomorrow.setDate(today.getDate() + 1);\r\n        return eventDate.toDateString() === tomorrow.toDateString();\r\n      }\r\n      if (filter === \"This Week\") {\r\n        const weekStart = new Date(today);\r\n        weekStart.setDate(today.getDate() - today.getDay() + 1); // Start of the week (Monday)\r\n        const weekEnd = new Date(weekStart);\r\n        weekEnd.setDate(weekStart.getDate() + 6); // End of the week (Sunday)\r\n        return eventDate >= weekStart && eventDate <= weekEnd;\r\n      }\r\n      return false;\r\n    });\r\n\r\n    setDateFilteredEvents(filtered);\r\n    setIsDateFilterActive(true); // Enable date filter when a date is selected\r\n  };\r\n\r\n  // Handle Input Changes for Search\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setSearchParams((prevParams) => ({\r\n      ...prevParams,\r\n      [name]: value,\r\n    }));\r\n  };\r\n  // Handle event registration\r\n  const handleRegister = async (eventId) => {\r\n    const userId = localStorage.getItem(\"userId\"); // Check if the user is logged in\r\n\r\n    if (!userId) {\r\n      alert(\"You need to sign in to register for this event.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(\r\n        \"https://jihceventsapi-hpdng8h8e7eqhdbm.canadacentral-01.azurewebsites.net/api/eventregistrations\",\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({ eventId, userId }),\r\n        }\r\n      );\r\n\r\n      if (response.ok) {\r\n        setRegisteredEvents((prev) => [...prev, eventId]); // Update the registered events list\r\n        alert(\"You have successfully registered for the event!\");\r\n      } else {\r\n        const errorData = await response.json();\r\n        alert(errorData.message || \"An error occurred.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error registering for the event:\", error);\r\n      alert(\"Something went wrong. Please try again.\");\r\n    }\r\n  };\r\n\r\n  // Filter by category or date\r\n  useEffect(() => {\r\n    let filtered = [...events];\r\n    if (selectedCategory) {\r\n      filtered = filtered.filter((event) => event.type === selectedCategory);\r\n    }\r\n    if (selectedDateFilter) {\r\n      const today = new Date();\r\n      filtered = filtered.filter((event) => {\r\n        const eventDate = new Date(event.date);\r\n        if (selectedDateFilter === \"Today\") {\r\n          return eventDate.toDateString() === today.toDateString();\r\n        }\r\n        if (selectedDateFilter === \"Tomorrow\") {\r\n          const tomorrow = new Date(today);\r\n          tomorrow.setDate(today.getDate() + 1);\r\n          return eventDate.toDateString() === tomorrow.toDateString();\r\n        }\r\n        if (selectedDateFilter === \"This Weekend\") {\r\n          const weekendStart = new Date(today);\r\n          weekendStart.setDate(today.getDate() + (6 - today.getDay()));\r\n          const weekendEnd = new Date(weekendStart);\r\n          weekendEnd.setDate(weekendStart.getDate() + 1);\r\n          return eventDate >= weekendStart && eventDate <= weekendEnd;\r\n        }\r\n        return true;\r\n      });\r\n    }\r\n    setFilteredEvents(filtered);\r\n  }, [selectedCategory, selectedDateFilter, events]);\r\n  // Horizontal Scroll Handlers\r\n  const scrollLeft = () => {\r\n    document.querySelector(\".student-events-scroll\").scrollBy({\r\n      left: -300,\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n\r\n  const scrollRight = () => {\r\n    document.querySelector(\".student-events-scroll\").scrollBy({\r\n      left: 300,\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* Hero Section */}\r\n      <div className=\"hero\">\r\n        <h1 className=\"hero-title\">Welcome to JIHC Events</h1>\r\n        <p className=\"hero-subtitle\">Discover, learn, and connect.</p>\r\n      </div>\r\n\r\n      <div className=\"search-section\">\r\n        <input\r\n          type=\"text\"\r\n          name=\"title\"\r\n          value={searchParams.title}\r\n          onChange={handleInputChange}\r\n          placeholder=\"Enter event name\"\r\n          className=\"search-input\"\r\n        />\r\n        <select\r\n          name=\"type\"\r\n          value={searchParams.type}\r\n          onChange={handleInputChange}\r\n          className=\"filter-dropdown\"\r\n        >\r\n          <option value=\"\">Select Event Type</option>\r\n          {eventTypes.map((type, index) => (\r\n            <option key={index} value={type}>\r\n              {type}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <select\r\n          name=\"location\"\r\n          value={searchParams.location}\r\n          onChange={handleInputChange}\r\n          className=\"filter-dropdown\"\r\n        >\r\n          <option value=\"\">Select Location</option>\r\n          {locations.map((location, index) => (\r\n            <option key={index} value={location}>\r\n              {location}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <input\r\n          type=\"date\"\r\n          name=\"date\"\r\n          value={searchParams.date}\r\n          onChange={handleInputChange}\r\n          className=\"search-input\"\r\n        />\r\n        <button onClick={handleSearch} className=\"search-btn\">\r\n          Search\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"filtered-search-events\">\r\n        {filteredEvents.length > 0 ? (\r\n          <div className=\"events-container\">\r\n            {filteredEvents.map((event) => {\r\n              const isRegistered = registeredEvents.includes(event.id);\r\n              const progressPercent =\r\n                (event.attendees / event.maxAttendees) * 100;\r\n\r\n              return (\r\n                <div key={event.id} className=\"event-card\">\r\n                  <img\r\n                    src={event.image}\r\n                    alt={event.title}\r\n                    className=\"event-image\"\r\n                  />\r\n                  <div className=\"image-badge\">{event.price}</div>\r\n                  <div className=\"event-details\">\r\n                    <h3 className=\"event-title\">{event.title}</h3>\r\n                    <div className=\"event-inline\">\r\n                      <div className=\"event-date\">\r\n                        <i className=\"fa fa-calendar\" aria-hidden=\"true\"></i>\r\n                        {event.date}\r\n                      </div>\r\n                      <div className=\"event-location\">\r\n                        <i className=\"fa fa-map-marker\" aria-hidden=\"true\"></i>\r\n                        {event.location}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"event-audience\">{event.audience}</div>\r\n                    <div className=\"progress-bar-container\">\r\n                      <div\r\n                        className=\"progress-fill\"\r\n                        style={{\r\n                          width: `${progressPercent}%`,\r\n                        }}\r\n                      ></div>\r\n                    </div>\r\n                    <p className=\"progress-info\">\r\n                      {event.attendees}/{event.maxAttendees} Attendees\r\n                    </p>\r\n                    {isRegistered ? (\r\n                      <button className=\"register-button registered\" disabled>\r\n                        Registered\r\n                      </button>\r\n                    ) : (\r\n                      <button\r\n                        className=\"register-button\"\r\n                        onClick={() => handleRegister(event.id)}\r\n                        disabled={\r\n                          !localStorage.getItem(\"userId\") ||\r\n                          event.attendees >= event.maxAttendees\r\n                        }\r\n                      >\r\n                        {event.attendees >= event.maxAttendees\r\n                          ? \"Event Full\"\r\n                          : \"Register Now\"}\r\n                      </button>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        ) : (\r\n          <p className=\"no-events-message\">No events found for your search.</p>\r\n        )}\r\n      </div>\r\n\r\n      {/* Category Filter */}\r\n      <div className=\"category-filter\">\r\n        {eventTypes.map(({ type, image }) => (\r\n          <div\r\n            key={type}\r\n            className=\"category-circle\"\r\n            onClick={() =>\r\n              setFilteredEvents(events.filter((event) => event.type === type))\r\n            }\r\n          >\r\n            <img src={image} alt={type} className=\"category-image\" />\r\n            <p className=\"category-title\">{type}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Date Filter */}\r\n      {/* Date Filter */}\r\n      {/* Date Filter Section */}\r\n      <div className=\"date-filter-section\">\r\n        {/* Date Filter Section */}\r\n        <h2 className=\"section-title\">Filter by Date</h2>\r\n        <div className=\"date-filter\">\r\n          {[\"Today\", \"Tomorrow\", \"This Week\"].map((dateFilter) => (\r\n            <button\r\n              key={dateFilter}\r\n              className=\"date-button\"\r\n              onClick={() => handleDateFilter(dateFilter)}\r\n            >\r\n              {dateFilter}\r\n            </button>\r\n          ))}\r\n        </div>\r\n        {/* Render Filtered Events */}\r\n        <div className=\"filtered-events-section\">\r\n          <div className=\"events-container\">\r\n            {(isDateFilterActive\r\n              ? dateFilteredEvents\r\n              : searchFilteredEvents\r\n            ).map((event) => {\r\n              const isRegistered = registeredEvents.includes(event.id);\r\n              const progressPercent =\r\n                (event.attendees / event.maxAttendees) * 100;\r\n\r\n              return (\r\n                <div key={event.id} className=\"event-card\">\r\n                  <img\r\n                    src={event.image}\r\n                    alt={event.title}\r\n                    className=\"event-image\"\r\n                  />\r\n                  <div className=\"image-badge\">{event.price}</div>\r\n                  <div className=\"event-details\">\r\n                    <h3 className=\"event-title\">{event.title}</h3>\r\n                    <div className=\"event-inline\">\r\n                      <div className=\"event-date\">\r\n                        <i className=\"fa fa-calendar\" aria-hidden=\"true\"></i>\r\n                        {event.date}\r\n                      </div>\r\n                      <div className=\"event-location\">\r\n                        <i className=\"fa fa-map-marker\" aria-hidden=\"true\"></i>\r\n                        {event.location}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"event-audience\">{event.audience}</div>\r\n                    <div className=\"progress-bar-container\">\r\n                      <div\r\n                        className=\"progress-fill\"\r\n                        style={{\r\n                          width: `${progressPercent}%`,\r\n                        }}\r\n                      ></div>\r\n                    </div>\r\n                    <p className=\"progress-info\">\r\n                      {event.attendees}/{event.maxAttendees} Attendees\r\n                    </p>\r\n                    {isRegistered ? (\r\n                      <button className=\"register-button registered\" disabled>\r\n                        Registered\r\n                      </button>\r\n                    ) : (\r\n                      <button\r\n                        className=\"register-button\"\r\n                        onClick={() => handleRegister(event.id)}\r\n                        disabled={\r\n                          !localStorage.getItem(\"userId\") ||\r\n                          event.attendees >= event.maxAttendees\r\n                        }\r\n                      >\r\n                        {event.attendees >= event.maxAttendees\r\n                          ? \"Event Full\"\r\n                          : \"Register Now\"}\r\n                      </button>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          : (\r\n          {(isDateFilterActive ? dateFilteredEvents : searchFilteredEvents)\r\n            .length === 0 && (\r\n            <p className=\"no-events-message\">No events found.</p>\r\n          )}\r\n          )\r\n        </div>\r\n      </div>\r\n\r\n      {/* Render Filtered Events */}\r\n\r\n      {/* Popular Events in ACT Hall */}\r\n      {/* Popular Events in ACT Hall */}\r\n      <div className=\"popular-events-section\">\r\n        <h2 className=\"section-title\">\r\n          Popular Events in ACT Hall\r\n          <div className=\"section-underline\"></div>\r\n        </h2>\r\n        <div className=\"scroll-buttons-container\">\r\n          <button\r\n            className=\"scroll-button left-scroll\"\r\n            onClick={() => {\r\n              document.querySelector(\".popular-events-scroll\").scrollBy({\r\n                left: -300,\r\n                behavior: \"smooth\",\r\n              });\r\n            }}\r\n          >\r\n            &lt;\r\n          </button>\r\n          <button\r\n            className=\"scroll-button right-scroll\"\r\n            onClick={() => {\r\n              document.querySelector(\".popular-events-scroll\").scrollBy({\r\n                left: 300,\r\n                behavior: \"smooth\",\r\n              });\r\n            }}\r\n          >\r\n            &gt;\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"popular-events-scroll\">\r\n          {filteredEvents\r\n            .filter((event) => event.location === \"ACT Hall\")\r\n            .map((event) => {\r\n              const isRegistered = registeredEvents.includes(event.id);\r\n              const progressPercent =\r\n                (event.attendees / event.maxAttendees) * 100;\r\n\r\n              return (\r\n                <div key={event.id} className=\"event-card\">\r\n                  <img\r\n                    src={event.image}\r\n                    alt={event.title}\r\n                    className=\"event-image\"\r\n                  />\r\n                  <div className=\"image-badge\">{event.price}</div>\r\n                  <div className=\"event-details\">\r\n                    <h3 className=\"event-title\">{event.title}</h3>\r\n                    <div className=\"event-inline\">\r\n                      <div className=\"event-date\">{event.date}</div>\r\n                      <div className=\"event-location\">{event.location}</div>\r\n                    </div>\r\n                    <div className=\"progress-bar-container\">\r\n                      <div\r\n                        className=\"progress-fill\"\r\n                        style={{\r\n                          width: `${progressPercent}%`,\r\n                        }}\r\n                      ></div>\r\n                    </div>\r\n                    <p className=\"progress-info\">\r\n                      {event.attendees}/{event.maxAttendees} Attendees\r\n                    </p>\r\n                    {isRegistered ? (\r\n                      <button className=\"register-button registered\" disabled>\r\n                        Registered\r\n                      </button>\r\n                    ) : (\r\n                      <button\r\n                        className=\"register-button\"\r\n                        onClick={() => handleRegister(event.id)}\r\n                        disabled={\r\n                          !localStorage.getItem(\"userId\") ||\r\n                          event.attendees >= event.maxAttendees\r\n                        }\r\n                      >\r\n                        {event.attendees >= event.maxAttendees\r\n                          ? \"Event Full\"\r\n                          : \"Register Now\"}\r\n                      </button>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Events Only for Students */}\r\n      <div className=\"student-events-section\">\r\n        <h2 className=\"section-title\">\r\n          Events for Students\r\n          <div className=\"section-underline\"></div>\r\n        </h2>\r\n        <div className=\"student-events-container\">\r\n          {filteredEvents\r\n            .filter((event) => event.audience === \"Student\")\r\n            .map((event) => {\r\n              const isRegistered = registeredEvents.includes(event.id);\r\n              const progressPercent =\r\n                (event.attendees / event.maxAttendees) * 100;\r\n\r\n              return (\r\n                <div key={event.id} className=\"event-card\">\r\n                  <img\r\n                    src={event.image}\r\n                    alt={event.title}\r\n                    className=\"event-image\"\r\n                  />\r\n                  <div className=\"image-badge\">{event.price}</div>\r\n                  <div className=\"event-details\">\r\n                    <h3 className=\"event-title\">{event.title}</h3>\r\n                    <div className=\"event-inline\">\r\n                      <div className=\"event-date\">\r\n                        <i className=\"fa fa-calendar\" aria-hidden=\"true\"></i>\r\n                        {event.date}\r\n                      </div>\r\n                      <div className=\"event-location\">\r\n                        <i className=\"fa fa-map-marker\" aria-hidden=\"true\"></i>\r\n                        {event.location}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"event-audience\">{event.audience}</div>\r\n                    <div className=\"progress-bar-container\">\r\n                      <div\r\n                        className=\"progress-fill\"\r\n                        style={{\r\n                          width: `${progressPercent}%`,\r\n                        }}\r\n                      ></div>\r\n                    </div>\r\n                    <p className=\"progress-info\">\r\n                      {event.attendees}/{event.maxAttendees} Attendees\r\n                    </p>\r\n                    {isRegistered ? (\r\n                      <button className=\"register-button registered\" disabled>\r\n                        Registered\r\n                      </button>\r\n                    ) : (\r\n                      <button\r\n                        className=\"register-button\"\r\n                        onClick={() => handleRegister(event.id)}\r\n                        disabled={\r\n                          !localStorage.getItem(\"userId\") ||\r\n                          event.attendees >= event.maxAttendees\r\n                        }\r\n                      >\r\n                        {event.attendees >= event.maxAttendees\r\n                          ? \"Event Full\"\r\n                          : \"Register Now\"}\r\n                      </button>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n      </div>\r\n\r\n      {/* All Events */}\r\n      <div className=\"events-container\">\r\n        <h2 className=\"section-title\">\r\n          More Events\r\n          <div className=\"section-underline\"></div>\r\n        </h2>\r\n        {filteredEvents.map((event) => {\r\n          const isRegistered = registeredEvents.includes(event.id);\r\n          const progressPercent = (event.attendees / event.maxAttendees) * 100;\r\n\r\n          return (\r\n            <div key={event.id} className=\"event-card\">\r\n              <img\r\n                src={event.image}\r\n                alt={event.title}\r\n                className=\"event-image\"\r\n              />\r\n              <div className=\"image-badge\">{event.price}</div>\r\n              <div className=\"event-details\">\r\n                <h3 className=\"event-title\">{event.title}</h3>\r\n                <div className=\"event-inline\">\r\n                  <div className=\"event-date\">\r\n                    <i className=\"fa fa-calendar\" aria-hidden=\"true\"></i>\r\n                    {event.date}\r\n                  </div>\r\n                  <div className=\"event-location\">\r\n                    <i className=\"fa fa-map-marker\" aria-hidden=\"true\"></i>\r\n                    {event.location}\r\n                  </div>\r\n                </div>\r\n                <div className=\"event-audience\">{event.audience}</div>\r\n                <div className=\"progress-bar-container\">\r\n                  <div\r\n                    className=\"progress-fill\"\r\n                    style={{\r\n                      width: `${progressPercent}%`,\r\n                    }}\r\n                  ></div>\r\n                </div>\r\n                <p className=\"progress-info\">\r\n                  {event.attendees}/{event.maxAttendees} Attendees\r\n                </p>\r\n                {isRegistered ? (\r\n                  <button className=\"register-button registered\" disabled>\r\n                    Registered\r\n                  </button>\r\n                ) : (\r\n                  <button\r\n                    className=\"register-button\"\r\n                    onClick={() => handleRegister(event.id)}\r\n                    disabled={\r\n                      !localStorage.getItem(\"userId\") ||\r\n                      event.attendees >= event.maxAttendees\r\n                    }\r\n                  >\r\n                    {event.attendees >= event.maxAttendees\r\n                      ? \"Event Full\"\r\n                      : \"Register Now\"}\r\n                  </button>\r\n                )}\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React, { useState } from \"react\";\r\n\r\nconst CreateEventModal = ({ onClose, onEventCreated }) => {\r\n  const [formData, setFormData] = useState({\r\n    title: \"\",\r\n    type: \"\",\r\n    date: \"\",\r\n    location: \"\",\r\n    price: \"\",\r\n    deadline: \"\",\r\n    audience: \"Student\",\r\n    description: \"\",\r\n    image: \"\",\r\n    maxAttendees: 50,\r\n  });\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prevData) => ({ ...prevData, [name]: value }));\r\n  };\r\n\r\n  const handleFormSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const userId = localStorage.getItem(\"userId\");\r\n    if (!userId) {\r\n      alert(\"User ID is missing. Please log in again.\");\r\n      return;\r\n    }\r\n\r\n    const eventDataWithOrganizer = {\r\n      ...formData, // Corrected from eventData to formData\r\n      organizerId: parseInt(userId), // Save userId as the organizer\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(\r\n        \"https://jihceventsapi-hpdng8h8e7eqhdbm.canadacentral-01.azurewebsites.net/api/events\",\r\n        {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify(eventDataWithOrganizer),\r\n        }\r\n      );\r\n\r\n      if (response.ok) {\r\n        const newEvent = await response.json();\r\n        alert(\"Event created successfully!\");\r\n        onEventCreated(newEvent); // Send the created event back to Profile.js\r\n        onClose(); // Close the modal\r\n      } else {\r\n        const errorData = await response.json();\r\n        alert(errorData.message || \"Failed to create the event.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error creating event:\", error);\r\n      alert(\"Something went wrong. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"modal-overlay\">\r\n      <div className=\"modal create-event-modal\">\r\n        <button className=\"close-btn\" onClick={onClose}>\r\n          ✕\r\n        </button>\r\n\r\n        <h2 className=\"modal-title\">Create New Event</h2>\r\n        <div className=\"modal-content\">\r\n          <form onSubmit={handleFormSubmit} className=\"create-event-form\">\r\n            <div className=\"form-section\">\r\n              <div className=\"form-column\">\r\n                <div className=\"input-group\">\r\n                  <label htmlFor=\"title\">Event Title</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"title\"\r\n                    name=\"title\"\r\n                    value={formData.title}\r\n                    onChange={handleInputChange}\r\n                    required\r\n                  />\r\n                </div>\r\n                <div className=\"input-group\">\r\n                  <label htmlFor=\"type\">Event Type</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"type\"\r\n                    name=\"type\"\r\n                    value={formData.type}\r\n                    onChange={handleInputChange}\r\n                    required\r\n                  />\r\n                </div>\r\n                <div className=\"input-group\">\r\n                  <label htmlFor=\"date\">Date</label>\r\n                  <input\r\n                    type=\"date\"\r\n                    id=\"date\"\r\n                    name=\"date\"\r\n                    value={formData.date}\r\n                    onChange={handleInputChange}\r\n                    required\r\n                  />\r\n                </div>\r\n                <div className=\"input-group\">\r\n                  <label htmlFor=\"location\">Location</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"location\"\r\n                    name=\"location\"\r\n                    value={formData.location}\r\n                    onChange={handleInputChange}\r\n                    required\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"form-column\">\r\n                <div className=\"input-group\">\r\n                  <label htmlFor=\"price\">Price</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"price\"\r\n                    name=\"price\"\r\n                    value={formData.price}\r\n                    onChange={handleInputChange}\r\n                    required\r\n                  />\r\n                </div>\r\n                <div className=\"input-group\">\r\n                  <label htmlFor=\"deadline\">Registration Deadline</label>\r\n                  <input\r\n                    type=\"date\"\r\n                    id=\"deadline\"\r\n                    name=\"deadline\"\r\n                    value={formData.deadline}\r\n                    onChange={handleInputChange}\r\n                    required\r\n                  />\r\n                </div>\r\n                <div className=\"input-group\">\r\n                  <label htmlFor=\"audience\">Audience</label>\r\n                  <select\r\n                    id=\"audience\"\r\n                    name=\"audience\"\r\n                    value={formData.audience}\r\n                    onChange={handleInputChange}\r\n                    required\r\n                  >\r\n                    <option value=\"Student\">Student</option>\r\n                    <option value=\"Teacher\">Teacher</option>\r\n                    <option value=\"All\">All</option>\r\n                  </select>\r\n                </div>\r\n                <div className=\"input-group\">\r\n                  <label htmlFor=\"maxAttendees\">Max Attendees</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    id=\"maxAttendees\"\r\n                    name=\"maxAttendees\"\r\n                    value={formData.maxAttendees}\r\n                    onChange={handleInputChange}\r\n                    required\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"input-group\">\r\n              <label htmlFor=\"description\">Description</label>\r\n              <textarea\r\n                id=\"description\"\r\n                name=\"description\"\r\n                value={formData.description}\r\n                onChange={handleInputChange}\r\n                rows=\"4\"\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"input-group\">\r\n              <label htmlFor=\"image\">Image URL</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"image\"\r\n                name=\"image\"\r\n                value={formData.image}\r\n                onChange={handleInputChange}\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"form-buttons\">\r\n              <button type=\"button\" className=\"cancel-btn\" onClick={onClose}>\r\n                Cancel\r\n              </button>\r\n              <button type=\"submit\" className=\"submit-btn\">\r\n                Create Event\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateEventModal;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport CreateEventModal from \"../components/CreateEventModal\";\r\n\r\nconst Profile = () => {\r\n  const [userData, setUserData] = useState(null);\r\n  const [userEvents, setUserEvents] = useState([]);\r\n  const [registeredEvents, setRegisteredEvents] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [isUpdateModalOpen, setIsUpdateModalOpen] = useState(false);\r\n  const [eventToUpdate, setEventToUpdate] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  // Get userId from localStorage\r\n  const userId = localStorage.getItem(\"userId\");\r\n\r\n  // Redirect to home if userId is not available\r\n  useEffect(() => {\r\n    if (!userId) {\r\n      console.warn(\"UserId is null, redirecting to home page...\");\r\n      navigate(\"/\");\r\n    }\r\n  }, [userId, navigate]);\r\n\r\n  // Fetch user data and events\r\n  useEffect(() => {\r\n    if (!userId) return;\r\n\r\n    const fetchUserData = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          `https://jihceventsapi-hpdng8h8e7eqhdbm.canadacentral-01.azurewebsites.net/api/users/${userId}`\r\n        );\r\n\r\n        if (!response.ok) {\r\n          throw new Error(\"Failed to fetch user data.\");\r\n        }\r\n\r\n        const userData = await response.json();\r\n        setUserData(userData);\r\n\r\n        const allEventsResponse = await fetch(\r\n          `https://jihceventsapi-hpdng8h8e7eqhdbm.canadacentral-01.azurewebsites.net/api/events`\r\n        );\r\n        const allEventsData = await allEventsResponse.json();\r\n        const userOrganizedEvents = allEventsData.filter(\r\n          (event) => event.organizerId === parseInt(userId)\r\n        );\r\n        setUserEvents(userOrganizedEvents);\r\n      } catch (error) {\r\n        console.error(\"Error fetching user data:\", error);\r\n        setError(\"Failed to load user data.\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchUserData();\r\n  }, [userId]);\r\n\r\n  // Open/close modals\r\n  const handleOpenCreateModal = () => setIsModalOpen(true);\r\n  const handleCloseCreateModal = () => setIsModalOpen(false);\r\n  const handleOpenUpdateModal = (event) => {\r\n    setEventToUpdate(event);\r\n    setIsUpdateModalOpen(true);\r\n  };\r\n  const handleCloseUpdateModal = () => setIsUpdateModalOpen(false);\r\n\r\n  // Handle new event creation\r\n  const handleEventCreated = (newEvent) => {\r\n    if (newEvent) {\r\n      setUserEvents((prevEvents) => [...prevEvents, newEvent]); // Add the new event to the existing list\r\n    } else {\r\n      console.warn(\"No event data returned from CreateEventModal.\");\r\n    }\r\n  };\r\n\r\n  // Handle event update\r\n  const handleEventUpdated = (updatedEvent) => {\r\n    if (updatedEvent) {\r\n      setUserEvents((prevEvents) =>\r\n        prevEvents.map((event) =>\r\n          event.id === updatedEvent.id ? updatedEvent : event\r\n        )\r\n      );\r\n    }\r\n  };\r\n\r\n  // Handle event deletion\r\n  const handleDeleteEvent = async (eventId) => {\r\n    try {\r\n      const response = await fetch(\r\n        `https://jihceventsapi-hpdng8h8e7eqhdbm.canadacentral-01.azurewebsites.net/api/events/${eventId}`,\r\n        { method: \"DELETE\" }\r\n      );\r\n      if (response.ok) {\r\n        alert(\"Event deleted successfully!\");\r\n        setUserEvents((prev) => prev.filter((event) => event.id !== eventId));\r\n      } else {\r\n        alert(\"Failed to delete event.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error deleting event:\", error);\r\n      alert(\"An error occurred while trying to delete the event.\");\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    const fetchRegisteredEvents = async () => {\r\n      if (!userId) {\r\n        console.warn(\"UserId is null, skipping fetch for registered events.\");\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await fetch(\r\n          `https://jihceventsapi-hpdng8h8e7eqhdbm.canadacentral-01.azurewebsites.net/api/users/${userId}`\r\n        );\r\n        if (!response.ok) {\r\n          throw new Error(\"Failed to fetch registered events.\");\r\n        }\r\n        const userData = await response.json();\r\n        const eventIds = userData.eventRegistrations.map(\r\n          (registration) => registration.eventId\r\n        );\r\n\r\n        const eventPromises = eventIds.map((eventId) =>\r\n          fetch(\r\n            `https://jihceventsapi-hpdng8h8e7eqhdbm.canadacentral-01.azurewebsites.net/api/events/${eventId}`\r\n          ).then((res) => res.json())\r\n        );\r\n\r\n        const registeredEvents = await Promise.all(eventPromises);\r\n        setRegisteredEvents(registeredEvents);\r\n      } catch (error) {\r\n        console.error(\"Error fetching registered events:\", error);\r\n      }\r\n    };\r\n\r\n    fetchRegisteredEvents();\r\n  }, [userId]);\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n  if (error) return <div>{error}</div>;\r\n\r\n  return (\r\n    <div className=\"profile-page\">\r\n      <h1>Welcome, {userData.name}!</h1>\r\n\r\n      {userData.userType === \"Teacher\" && (\r\n        <button onClick={handleOpenCreateModal}>Create Event</button>\r\n      )}\r\n\r\n      {isModalOpen && (\r\n        <CreateEventModal\r\n          onClose={handleCloseCreateModal}\r\n          onEventCreated={handleEventCreated}\r\n        />\r\n      )}\r\n\r\n      {isUpdateModalOpen && (\r\n        <CreateEventModal\r\n          onClose={handleCloseUpdateModal}\r\n          onEventCreated={handleEventUpdated}\r\n          existingEvent={eventToUpdate}\r\n        />\r\n      )}\r\n\r\n      <h2>Your Created Events</h2>\r\n      {userEvents.length > 0 ? (\r\n        userEvents.map((event) => (\r\n          <div key={event.id} className=\"event-card\">\r\n            <h3>{event.title}</h3>\r\n            <p>Location: {event.location}</p>\r\n            <p>Date: {event.date}</p>\r\n            <button onClick={() => handleOpenUpdateModal(event)}>Update</button>\r\n            <button onClick={() => handleDeleteEvent(event.id)}>Delete</button>\r\n          </div>\r\n        ))\r\n      ) : (\r\n        <p>You have not created any events yet.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React, { useState } from \"react\";\r\n\r\nconst SignInModal = ({ onClose, setIsLoggedIn, setUserName }) => {\r\n  const [formData, setFormData] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prevData) => ({ ...prevData, [name]: value }));\r\n  };\r\n\r\n  const handleFormSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const response = await fetch(\r\n        \"https://jihceventsapi-hpdng8h8e7eqhdbm.canadacentral-01.azurewebsites.net/api/users\"\r\n      );\r\n      const users = await response.json();\r\n\r\n      // Find user matching email and password\r\n      const user = users.find(\r\n        (user) =>\r\n          user.email === formData.email && user.password === formData.password\r\n      );\r\n\r\n      if (user) {\r\n        console.log(\"User found!\", user);\r\n        setIsLoggedIn(true);\r\n        setUserName(user.name);\r\n        localStorage.setItem(\"userId\", user.id);\r\n        onClose();\r\n      } else {\r\n        alert(\"Invalid email or password.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error signing in:\", error);\r\n      alert(\"Something went wrong. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"modal-overlay\">\r\n      <div className=\"modal\">\r\n        <button className=\"close-btn\" onClick={onClose}>\r\n          ✕\r\n        </button>\r\n\r\n        <div className=\"modal-content\">\r\n          <h2 className=\"modal-title\">Welcome Back!</h2>\r\n          <p className=\"modal-subtitle\">\r\n            Sign in to discover and register for JIHC Events.\r\n          </p>\r\n\r\n          <form onSubmit={handleFormSubmit} className=\"modal-form\">\r\n            <div className=\"input-group\">\r\n              <label htmlFor=\"email\">Email</label>\r\n              <input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                id=\"email\"\r\n                placeholder=\"example@email.com\"\r\n                value={formData.email}\r\n                onChange={handleInputChange}\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <div className=\"input-group\">\r\n              <label htmlFor=\"password\">Password</label>\r\n              <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                id=\"password\"\r\n                placeholder=\"Enter your password\"\r\n                value={formData.password}\r\n                onChange={handleInputChange}\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <button type=\"submit\" className=\"submit-btn\">\r\n              Sign In\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignInModal;\r\n","import React, { useState } from \"react\";\r\n\r\nconst SignUpModal = ({ onClose, setIsLoggedIn, setUserName }) => {\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    userType: \"Student\",\r\n  });\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prevData) => ({ ...prevData, [name]: value }));\r\n  };\r\n\r\n  const handleFormSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const response = await fetch(\r\n        \"https://jihceventsapi-hpdng8h8e7eqhdbm.canadacentral-01.azurewebsites.net/api/users\",\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(formData),\r\n        }\r\n      );\r\n\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        setIsLoggedIn(true);\r\n        setUserName(data.name);\r\n        localStorage.setItem(\"userId\", data.id);\r\n        onClose();\r\n      } else {\r\n        alert(data.message || \"Sign-up failed. Please try again.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error signing up:\", error);\r\n      alert(\"Something went wrong. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"modal-overlay\">\r\n      <div className=\"modal\">\r\n        <button className=\"close-btn\" onClick={onClose}>\r\n          ✕\r\n        </button>\r\n\r\n        <div className=\"modal-content\">\r\n          <h2 className=\"modal-title\">Create an Account</h2>\r\n          <p className=\"modal-subtitle\">\r\n            Join our community of event-goers and explore amazing events!\r\n          </p>\r\n\r\n          <form onSubmit={handleFormSubmit} className=\"modal-form\">\r\n            <div className=\"input-group\">\r\n              <label htmlFor=\"name\">Full Name</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                id=\"name\"\r\n                placeholder=\"John Doe\"\r\n                value={formData.name}\r\n                onChange={handleInputChange}\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <div className=\"input-group\">\r\n              <label htmlFor=\"email\">Email</label>\r\n              <input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                id=\"email\"\r\n                placeholder=\"example@email.com\"\r\n                value={formData.email}\r\n                onChange={handleInputChange}\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <div className=\"input-group\">\r\n              <label htmlFor=\"password\">Password</label>\r\n              <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                id=\"password\"\r\n                placeholder=\"Enter your password\"\r\n                value={formData.password}\r\n                onChange={handleInputChange}\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <div className=\"input-group\">\r\n              <label htmlFor=\"userType\">User Type</label>\r\n              <select\r\n                name=\"userType\"\r\n                id=\"userType\"\r\n                value={formData.userType}\r\n                onChange={handleInputChange}\r\n                required\r\n              >\r\n                <option value=\"Student\">Student</option>\r\n                <option value=\"Teacher\">Teacher</option>\r\n                <option value=\"Other\">Other</option>\r\n              </select>\r\n            </div>\r\n\r\n            <button type=\"submit\" className=\"submit-btn\">\r\n              Sign Up\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUpModal;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport SignInModal from \"./SignIn\";\r\nimport SignUpModal from \"./SignUp\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = () => {\r\n  const [isSignInOpen, setIsSignInOpen] = useState(false);\r\n  const [isSignUpOpen, setIsSignUpOpen] = useState(false);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [userType, setUserType] = useState(null); // Added userType state\r\n\r\n  useEffect(() => {\r\n    if (isLoggedIn) {\r\n      // Fetch userType from localStorage\r\n      const storedUserType = localStorage.getItem(\"userType\");\r\n      if (storedUserType) {\r\n        setUserType(storedUserType);\r\n      }\r\n    } else {\r\n      setUserType(null); // Reset userType on logout\r\n    }\r\n  }, [isLoggedIn]);\r\n\r\n  const handleSignInClick = () => {\r\n    setIsSignInOpen(true);\r\n  };\r\n\r\n  const handleSignUpClick = () => {\r\n    setIsSignUpOpen(true);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    setIsLoggedIn(false);\r\n    setUserName(\"\");\r\n    setUserType(null); // Clear userType on logout\r\n    localStorage.removeItem(\"userId\"); // Remove user ID from local storage\r\n    localStorage.removeItem(\"userType\"); // Remove userType from local storage\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <header className=\"header\">\r\n        <Link to={\"/\"}>\r\n          <div className=\"logo\">\r\n            <img\r\n              src=\"https://res.cloudinary.com/dlxfub7s1/image/upload/v1734863215/jihc-logo-v1_xr5t1z.png\"\r\n              alt=\"JIHC Events Logo\"\r\n            />\r\n          </div>\r\n        </Link>\r\n        <nav className=\"nav-menu\">\r\n          <Link to=\"/\" className=\"nav-link\">\r\n            Home\r\n          </Link>\r\n          <Link to=\"/events\" className=\"nav-link\">\r\n            Events\r\n          </Link>\r\n          <Link to=\"/about\" className=\"nav-link\">\r\n            About Us\r\n          </Link>\r\n          <Link to=\"/contact\" className=\"nav-link\">\r\n            Contact Us\r\n          </Link>\r\n          {isLoggedIn && userType === \"Teacher\" && (\r\n            <Link to=\"/create-event\" className=\"nav-link\">\r\n              Create Event\r\n            </Link>\r\n          )}\r\n        </nav>\r\n        <div className=\"auth-buttons\">\r\n          {!isLoggedIn ? (\r\n            <>\r\n              <button onClick={handleSignInClick} className=\"btn sign-in-btn\">\r\n                Sign In\r\n              </button>\r\n              <button onClick={handleSignUpClick} className=\"btn sign-up-btn\">\r\n                Sign Up\r\n              </button>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Link to=\"/profile\" className=\"btn profile-btn\">\r\n                Profile\r\n              </Link>\r\n              <button onClick={handleLogout} className=\"btn logout-btn\">\r\n                Logout\r\n              </button>\r\n            </>\r\n          )}\r\n        </div>\r\n        {/* Sign In Modal */}\r\n        {isSignInOpen && (\r\n          <SignInModal\r\n            onClose={() => setIsSignInOpen(false)}\r\n            setIsLoggedIn={setIsLoggedIn}\r\n            setUserName={setUserName}\r\n          />\r\n        )}\r\n        {/* Sign Up Modal */}\r\n        {isSignUpOpen && (\r\n          <SignUpModal\r\n            onClose={() => setIsSignUpOpen(false)}\r\n            setIsLoggedIn={setIsLoggedIn}\r\n            setUserName={setUserName}\r\n          />\r\n        )}\r\n      </header>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"footer\">\r\n      {/* Top Section with Logo and Social Icons */}\r\n      <div className=\"footer-top\">\r\n        <div className=\"footer-logo\">\r\n          <h2>JIHC College</h2>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Middle Section with Contact Info */}\r\n      <div className=\"footer-contact\">\r\n        <div className=\"footer-contact-item\">\r\n          <p>123 JIHC Street, Main City, Country</p>\r\n        </div>\r\n        <div className=\"footer-contact-item\">\r\n          <p>+123 456 789</p>\r\n        </div>\r\n        <div className=\"footer-contact-item\">\r\n          <p>info@jihccollege.edu</p>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Bottom Section with Links and Copyright */}\r\n      <div className=\"footer-bottom\">\r\n        <ul className=\"footer-links\">\r\n          <li>\r\n            <a href=\"#about\">About Us</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#contact\">Contact</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#privacy\">Privacy Policy</a>\r\n          </li>\r\n        </ul>\r\n        <p className=\"copyright\">\r\n          © {new Date().getFullYear()} JIHC College. All rights reserved.\r\n        </p>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\n\r\nconst UpdateEvent = () => {\r\n  const { eventId } = useParams(); // Get the event ID from the URL\r\n  const [eventData, setEventData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    // Fetch the current event data using the event ID\r\n    const fetchEvent = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          `https://jihceventsapi-hpdng8h8e7eqhdbm.canadacentral-01.azurewebsites.net/api/events/${eventId}`\r\n        );\r\n\r\n        if (!response.ok) {\r\n          throw new Error(\"Failed to fetch event data.\");\r\n        }\r\n\r\n        const data = await response.json();\r\n        setEventData(data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching event data:\", error);\r\n        setError(\"Failed to load event data.\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchEvent();\r\n  }, [eventId]);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setEventData((prevData) => ({ ...prevData, [name]: value }));\r\n  };\r\n\r\n  const handleFormSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const response = await fetch(\r\n        `https://jihceventsapi-hpdng8h8e7eqhdbm.canadacentral-01.azurewebsites.net/api/events/${eventId}`,\r\n        {\r\n          method: \"PUT\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify(eventData),\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to update event.\");\r\n      }\r\n\r\n      alert(\"Event updated successfully!\");\r\n      navigate(\"/profile\"); // Redirect back to the profile page\r\n    } catch (error) {\r\n      console.error(\"Error updating event:\", error);\r\n      alert(\"Failed to update the event. Please try again.\");\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div className=\"error-message\">{error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"update-event-page\">\r\n      <h1>Update Event</h1>\r\n      <form onSubmit={handleFormSubmit}>\r\n        <div className=\"input-group\">\r\n          <label htmlFor=\"title\">Title</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"title\"\r\n            value={eventData.title}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div className=\"input-group\">\r\n          <label htmlFor=\"type\">Type</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"type\"\r\n            value={eventData.type}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div className=\"input-group\">\r\n          <label htmlFor=\"date\">Date</label>\r\n          <input\r\n            type=\"date\"\r\n            name=\"date\"\r\n            value={eventData.date}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div className=\"input-group\">\r\n          <label htmlFor=\"location\">Location</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"location\"\r\n            value={eventData.location}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div className=\"input-group\">\r\n          <label htmlFor=\"price\">Price</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"price\"\r\n            value={eventData.price}\r\n            onChange={handleInputChange}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"input-group\">\r\n          <label htmlFor=\"description\">Description</label>\r\n          <textarea\r\n            name=\"description\"\r\n            value={eventData.description}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <button type=\"submit\">Update Event</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateEvent;\r\n","import React, { useRef } from \"react\";\r\nimport emailjs from \"emailjs-com\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faEnvelope,\r\n  faPhone,\r\n  faMapMarkerAlt,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faInstagram, faFacebook } from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst ContactUs = () => {\r\n  const form = useRef();\r\n\r\n  const sendEmail = (e) => {\r\n    e.preventDefault();\r\n    emailjs\r\n      .sendForm(\r\n        \"service_g6whaij\",\r\n        \"template_j0ctme9\",\r\n        form.current,\r\n        \"E5iW-kR7EcirveQHC\"\r\n      )\r\n      .then(\r\n        (result) => {\r\n          alert(\"Message sent successfully!\");\r\n          e.target.reset();\r\n        },\r\n        (error) => {\r\n          alert(\"An error occurred. Please try again.\");\r\n        }\r\n      );\r\n  };\r\n\r\n  return (\r\n    <div className=\"contact-section\">\r\n      {/* Contact Form */}\r\n      <div className=\"contact-form\">\r\n        <h1 className=\"contact-title\">Contact Us</h1>\r\n        <p className=\"contact-description\">\r\n          We'd love to hear from you! Please fill out the form below or visit us\r\n          at our address.\r\n        </p>\r\n        <form ref={form} onSubmit={sendEmail}>\r\n          <input\r\n            type=\"text\"\r\n            name=\"firstName\"\r\n            placeholder=\"First Name*\"\r\n            required\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"lastName\"\r\n            placeholder=\"Last Name*\"\r\n            required\r\n          />\r\n          <input type=\"email\" name=\"email\" placeholder=\"Email*\" required />\r\n          <textarea name=\"message\" rows=\"5\" placeholder=\"Message*\" required />\r\n          <button type=\"submit\" className=\"submit-btn\">\r\n            Send Message\r\n          </button>\r\n        </form>\r\n        <div className=\"contact-details\">\r\n          <div className=\"contact-item\">\r\n            <FontAwesomeIcon icon={faEnvelope} className=\"contact-icon\" />\r\n            <a href=\"mailto:info@jihc.kz\" className=\"contact-text\">\r\n              info@jihc.kz\r\n            </a>\r\n          </div>\r\n          <div className=\"contact-item\">\r\n            <FontAwesomeIcon icon={faPhone} className=\"contact-icon\" />\r\n            <a href=\"tel:87078020088\" className=\"contact-text\">\r\n              8-707-802-00-88\r\n            </a>\r\n          </div>\r\n          <div className=\"contact-item\">\r\n            <FontAwesomeIcon icon={faMapMarkerAlt} className=\"contact-icon\" />\r\n            <span className=\"contact-text\">Тараз, ул. Пушкина, 154</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Contact Info and Map */}\r\n\r\n      <div className=\"contact-info\">\r\n        <div className=\"map-container\">\r\n          <iframe\r\n            src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d46763.522386370154!2d71.33593595381794!3d42.899850827140625!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x38a703484d578eb5%3A0xbb36b3fc4ad3ccd2!2z0JbQkNCc0JHQq9CbINCY0J3QndCe0JLQkNCm0JjQr9Cb0KvSmiDQltCe0pLQkNCg0Ksg0JrQntCb0JvQldCU0JbQhg!5e0!3m2!1sru!2skz!4v1736695792761!5m2!1sru!2skz\"\r\n            width=\"100%\"\r\n            height=\"450\"\r\n            style={{ border: 0 }}\r\n            allowFullScreen=\"\"\r\n            loading=\"lazy\"\r\n            referrerPolicy=\"no-referrer-when-downgrade\"\r\n          ></iframe>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Map Section */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactUs;\r\n","// AboutUs.js\r\nimport React, { useState } from \"react\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faCalendar,\r\n  faUsers,\r\n  faTools,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faFacebook, faInstagram } from \"@fortawesome/free-brands-svg-icons\";\r\nimport {\r\n  FaCalendarCheck,\r\n  FaUsers,\r\n  FaChartLine,\r\n  FaTrophy,\r\n} from \"react-icons/fa\";\r\n\r\nconst About = () => {\r\n  const [activeIndex, setActiveIndex] = useState(0);\r\n  const items = [\r\n    {\r\n      icon: <FaCalendarCheck />,\r\n      title: \"Organized Events\",\r\n      description: \"Seamlessly manage and organize events for everyone.\",\r\n    },\r\n    {\r\n      icon: <FaUsers />,\r\n      title: \"Community Building\",\r\n      description: \"Foster connections and build a stronger community.\",\r\n    },\r\n    {\r\n      icon: <FaChartLine />,\r\n      title: \"Growth Opportunities\",\r\n      description: \"Unlock personal and professional growth opportunities.\",\r\n    },\r\n    {\r\n      icon: <FaTrophy />,\r\n      title: \"Recognitions\",\r\n      description: \"Celebrate achievements with recognition and rewards.\",\r\n    },\r\n  ];\r\n  const nextSlide = () => {\r\n    setActiveIndex((prevIndex) => (prevIndex + 1) % items.length);\r\n  };\r\n\r\n  const prevSlide = () => {\r\n    setActiveIndex(\r\n      (prevIndex) => (prevIndex - 1 + items.length) % items.length\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"about-us\">\r\n      {/* Header Section */}\r\n      <section className=\"header-section\">\r\n        <h1>About JIHC Events</h1>\r\n        <p>Discover how we build connections and inspire through events.</p>\r\n        <div className=\"underline\"></div>\r\n      </section>\r\n      {/* Why Choose Us Section */}\r\n      <div className=\"why-choose-us-slider\">\r\n        <button className=\"slider-button prev\" onClick={prevSlide}>\r\n          {\"<\"}\r\n        </button>\r\n        <div className=\"slider-container\">\r\n          {items.map((item, index) => {\r\n            const offset = index - activeIndex;\r\n            const isCenter = offset === 0;\r\n\r\n            return (\r\n              <div\r\n                key={index}\r\n                className={`slider-item ${isCenter ? \"center\" : \"\"}`}\r\n                style={{\r\n                  transform: `translateX(${offset * 50}%) scale(${\r\n                    isCenter ? 1 : 0.8\r\n                  })`,\r\n                  zIndex: isCenter ? 2 : 1,\r\n                  opacity: isCenter ? 1 : 0.6,\r\n                }}\r\n              >\r\n                <div className=\"icon\">{item.icon}</div>\r\n                <h3 className=\"title\">{item.title}</h3>\r\n                <p className=\"description\">{item.description}</p>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <button className=\"slider-button next\" onClick={nextSlide}>\r\n          {\">\"}\r\n        </button>\r\n      </div>\r\n\r\n      {/* Mission & Vision Section */}\r\n      {/* Mission and Vision Section */}\r\n      <div className=\"mission-vision-section\">\r\n        <div className=\"mission-container\">\r\n          <div className=\"mission-box\">\r\n            <h3>Our Mission</h3>\r\n            <p>\r\n              To inspire students and organizers by creating opportunities for\r\n              learning, networking, and collaboration through impactful events.\r\n            </p>\r\n          </div>\r\n          <div className=\"mission-image\">\r\n            <img\r\n              src=\"https://res.cloudinary.com/dlxfub7s1/image/upload/v1736717765/154657e5b8393753a45bdd2f307b2598_vzvd4s.jpg\"\r\n              alt=\"Mission Visual\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"vision-container\">\r\n          <div className=\"vision-image\">\r\n            <img\r\n              src=\"https://res.cloudinary.com/dlxfub7s1/image/upload/v1736717765/60ab479cb8f5b6e91ecfd28e3ef4a5f4_jdva9z.jpg\"\r\n              alt=\"Vision Visual\"\r\n            />\r\n          </div>\r\n          <div className=\"vision-box\">\r\n            <h3>Our Vision</h3>\r\n            <p>\r\n              To be a leading platform for event management, empowering students\r\n              and teachers to create memorable and impactful experiences.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* Testimonials Section */}\r\n      {/* Reviews Section */}\r\n      {/* Reviews Section */}\r\n      <div className=\"puzzle-reviews-section\">\r\n        <h2 className=\"reviews-title\">What People Say</h2>\r\n        <div className=\"puzzle-reviews-container\">\r\n          <div className=\"puzzle-piece top-left\">\r\n            <p>\r\n              \"JIHC Events transformed the way we organize and participate in\r\n              events. It's a game-changer!\"\r\n            </p>\r\n            <span>- Moldir, Student </span>\r\n          </div>\r\n          <div className=\"puzzle-piece top-right\">\r\n            <p>\r\n              \"The tools and community built around this platform are\r\n              incredible. Highly recommend it.\"\r\n            </p>\r\n            <span>- Azina, Student </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Calendar from \"react-calendar\";\r\nimport \"react-calendar/dist/Calendar.css\";\r\n\r\nconst EventsPage = () => {\r\n  const [events, setEvents] = useState([]);\r\n  const [filteredEvents, setFilteredEvents] = useState([]);\r\n  const [searchParams, setSearchParams] = useState({\r\n    title: \"\",\r\n    type: \"\",\r\n    location: \"\",\r\n  });\r\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  const eventTypes = [\r\n    \"Competition\",\r\n    \"Event\",\r\n    \"Networking\",\r\n    \"Seminar\",\r\n    \"Sports\",\r\n  ];\r\n  const locations = [\r\n    \"ACT Hall\",\r\n    \"Library\",\r\n    \"Library Auditorium\",\r\n    \"Sports Hall\",\r\n    \"Techolab\",\r\n  ];\r\n\r\n  useEffect(() => {\r\n    fetch(\r\n      \"https://jihceventsapi-hpdng8h8e7eqhdbm.canadacentral-01.azurewebsites.net/api/events\"\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setEvents(data);\r\n        setFilteredEvents(data);\r\n      })\r\n      .catch((error) => console.error(\"Error fetching events:\", error));\r\n  }, []);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n    const filtered = events.filter((event) => {\r\n      const eventDate = new Date(event.date);\r\n      return eventDate.toDateString() === date.toDateString();\r\n    });\r\n    setFilteredEvents(filtered);\r\n  };\r\n\r\n  const handleCategoryChange = (category) => {\r\n    setSelectedCategory(category);\r\n    const filtered = events.filter((event) => event.type === category);\r\n    setFilteredEvents(filtered);\r\n  };\r\n\r\n  const handleSearch = () => {\r\n    const filtered = events.filter((event) => {\r\n      const matchesTitle =\r\n        searchParams.title === \"\" ||\r\n        event.title.toLowerCase().includes(searchParams.title.toLowerCase());\r\n      const matchesType =\r\n        searchParams.type === \"\" || event.type === searchParams.type;\r\n      const matchesLocation =\r\n        searchParams.location === \"\" ||\r\n        event.location === searchParams.location;\r\n\r\n      return matchesTitle && matchesType && matchesLocation;\r\n    });\r\n\r\n    setFilteredEvents(filtered);\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setSearchParams((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const resetFilters = () => {\r\n    setFilteredEvents(events);\r\n    setSearchParams({ title: \"\", type: \"\", location: \"\" });\r\n    setSelectedCategory(\"\");\r\n    setSelectedDate(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"events-page\">\r\n      <h1 className=\"page-title\">Events</h1>\r\n\r\n      <div className=\"filters-container\">\r\n        <div className=\"calendar-container\">\r\n          <h3>Select Date</h3>\r\n          <Calendar onChange={handleDateChange} value={selectedDate} />\r\n        </div>\r\n\r\n        <div className=\"category-filter\">\r\n          <h3>Categories</h3>\r\n          <ul>\r\n            {eventTypes.map((type) => (\r\n              <li\r\n                key={type}\r\n                className={selectedCategory === type ? \"active\" : \"\"}\r\n                onClick={() => handleCategoryChange(type)}\r\n              >\r\n                {type}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n\r\n        <div className=\"search-section\">\r\n          <input\r\n            type=\"text\"\r\n            name=\"title\"\r\n            value={searchParams.title}\r\n            onChange={handleInputChange}\r\n            placeholder=\"Enter event name\"\r\n          />\r\n          <select\r\n            name=\"type\"\r\n            value={searchParams.type}\r\n            onChange={handleInputChange}\r\n          >\r\n            <option value=\"\">Select Event Type</option>\r\n            {eventTypes.map((type) => (\r\n              <option key={type} value={type}>\r\n                {type}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <select\r\n            name=\"location\"\r\n            value={searchParams.location}\r\n            onChange={handleInputChange}\r\n          >\r\n            <option value=\"\">Select Location</option>\r\n            {locations.map((location) => (\r\n              <option key={location} value={location}>\r\n                {location}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <button className=\"filter-button\" onClick={handleSearch}>\r\n            Search\r\n          </button>\r\n          <button className=\"filter-button reset\" onClick={resetFilters}>\r\n            Reset\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"events-container\">\r\n        {filteredEvents.length > 0 ? (\r\n          filteredEvents.map((event) => (\r\n            <div key={event.id} className=\"event-card\">\r\n              <img\r\n                src={event.image}\r\n                alt={event.title}\r\n                className=\"event-image\"\r\n              />\r\n              <div className=\"event-details\">\r\n                <h3 className=\"event-title\">{event.title}</h3>\r\n                <p className=\"event-date\">{event.date}</p>\r\n                <p className=\"event-location\">{event.location}</p>\r\n                <p className=\"event-description\">{event.description}</p>\r\n              </div>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <p>No events found matching your criteria.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EventsPage;\r\n","import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport HomePage from \"./pages/HomePage\";\nimport Profile from \"./pages/Profile\";\nimport SignIn from \"./components/SignIn\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport \"./App.css\";\nimport SignUp from \"./components/SignUp\";\nimport UpdateEvent from \"./components/UpdateEvent\";\nimport ContactUs from \"./pages/ContactUs\";\nimport About from \"./pages/About\";\nimport EventsPage from \"./pages/EventsPage\";\nconst App = () => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userId, setUserId] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [isSignUp, setIsSignUp] = useState(true);\n\n  const handleLogin = (id) => {\n    setUserId(id);\n    setIsLoggedIn(true);\n    localStorage.setItem(\"userId\", id);\n  };\n\n  const handleLogout = () => {\n    setUserId(null);\n    setIsLoggedIn(false);\n    localStorage.removeItem(\"userId\");\n  };\n\n  // Load the user's login state from localStorage\n  useEffect(() => {\n    const savedUserId = localStorage.getItem(\"userId\");\n    if (savedUserId) {\n      setUserId(savedUserId);\n      setIsLoggedIn(true);\n    }\n  }, []);\n\n  const handleCloseModal = () => {\n    setShowModal(false);\n  };\n\n  return (\n    <Router>\n      <Header />\n\n      <Routes>\n        <Route path=\"/\" element={<HomePage />} />\n        <Route path=\"/profile\" element={<Profile userId={userId} />} />\n        <Route\n          path=\"/sign-in\"\n          element={<SignIn onClose={handleCloseModal} />}\n        />\n        <Route\n          path=\"/sign-up\"\n          element={<SignUp onClose={handleCloseModal} />}\n        />\n        <Route path=\"/update-event/:eventId\" element={<UpdateEvent />} />\n        <Route path=\"/contact\" element={<ContactUs />} />\n        <Route path=\"/about\" element={<About />} />\n        <Route path=\"/events\" element={<EventsPage />} /> {/* Events Page */}\n      </Routes>\n\n      <Footer />\n    </Router>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n"],"sourceRoot":""}