{"version":3,"sources":["pages/HomePage.js","components/CreateEventModal.js","pages/Profile.js","components/SignIn.js","components/SignUp.js","components/Header.js","components/Footer.js","components/UpdateEvent.js","App.js","index.js"],"names":["HomePage","events","setEvents","useState","searchParams","setSearchParams","title","type","location","date","useEffect","fetch","then","response","json","data","catch","error","console","handleInputChange","e","name","value","target","prevParams","_objectSpread","registeredEvents","setRegisteredEvents","storedEvents","localStorage","getItem","JSON","parse","React","createElement","Fragment","className","onChange","placeholder","map","index","key","onClick","handleSearch","filteredEvents","filter","event","matchesTitle","toLowerCase","includes","matchesType","matchesLocation","matchesDate","isRegistered","id","progressPercent","attendees","maxAttendees","src","image","alt","price","aria-hidden","audience","style","width","concat","disabled","async","userId","method","headers","body","stringify","eventId","ok","prev","alert","errorData","message","handleRegister","CreateEventModal","_ref","onClose","onEventCreated","formData","setFormData","deadline","description","prevData","onSubmit","preventDefault","eventDataWithOrganizer","organizerId","parseInt","newEvent","htmlFor","required","rows","Profile","userData","setUserData","userEvents","setUserEvents","loading","setLoading","setError","isModalOpen","setIsModalOpen","isUpdateModalOpen","setIsUpdateModalOpen","eventToUpdate","setEventToUpdate","navigate","useNavigate","warn","Error","allEventsResponse","userOrganizedEvents","fetchUserData","userType","handleOpenCreateModal","handleCloseCreateModal","prevEvents","handleCloseUpdateModal","updatedEvent","existingEvent","length","handleOpenUpdateModal","handleDeleteEvent","SignInModal","setIsLoggedIn","setUserName","email","password","user","find","log","setItem","SignUpModal","Header","isSignInOpen","setIsSignInOpen","isSignUpOpen","setIsSignUpOpen","isLoggedIn","userName","Link","to","handleLogout","removeItem","handleSignInClick","handleSignUpClick","Footer","href","Date","getFullYear","UpdateEvent","useParams","eventData","setEventData","fetchEvent","App","setUserId","showModal","setShowModal","isSignUp","setIsSignUp","savedUserId","handleCloseModal","Router","Routes","Route","path","element","SignIn","SignUp","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.020eab2a.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst HomePage = () => {\r\n  const [events, setEvents] = useState([]);\r\n  const [searchParams, setSearchParams] = useState({\r\n    title: \"\",\r\n    type: \"\",\r\n    location: \"\",\r\n    date: \"\",\r\n  });\r\n  const eventTypes = [\r\n    \"Workshop\",\r\n    \"Seminar\",\r\n    \"Training\",\r\n    \"Exhibition\",\r\n    \"Fair\",\r\n    \"Bootcamp\",\r\n  ];\r\n  const locations = [\r\n    \"Hybrid\",\r\n    \"Online\",\r\n    \"Campus Auditorium\",\r\n    \"City Hall\",\r\n    \"Innovation Center\",\r\n    \"Main Auditorium\",\r\n    \"Wellness Center\",\r\n    \"Tech Park\",\r\n  ];\r\n\r\n  // Fetch all events on page load\r\n  useEffect(() => {\r\n    fetch(\r\n      \"https://jihceventsapi-hpdng8h8e7eqhdbm.canadacentral-01.azurewebsites.net/api/events\"\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => setEvents(data))\r\n      .catch((error) => console.error(\"Error fetching events:\", error));\r\n  }, []);\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setSearchParams((prevParams) => ({\r\n      ...prevParams,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  // Handle search functionality\r\n  const handleSearch = () => {\r\n    const filteredEvents = events.filter((event) => {\r\n      const matchesTitle =\r\n        searchParams.title === \"\" ||\r\n        event.title.toLowerCase().includes(searchParams.title.toLowerCase());\r\n      const matchesType =\r\n        searchParams.type === \"\" ||\r\n        event.type.toLowerCase().includes(searchParams.type.toLowerCase());\r\n      const matchesLocation =\r\n        searchParams.location === \"\" ||\r\n        event.location\r\n          .toLowerCase()\r\n          .includes(searchParams.location.toLowerCase());\r\n      const matchesDate =\r\n        searchParams.date === \"\" || event.date === searchParams.date;\r\n\r\n      return matchesTitle && matchesType && matchesLocation && matchesDate;\r\n    });\r\n\r\n    setEvents(filteredEvents);\r\n  };\r\n  const [registeredEvents, setRegisteredEvents] = useState(() => {\r\n    const storedEvents = localStorage.getItem(\"registeredEvents\");\r\n    return storedEvents ? JSON.parse(storedEvents) : [];\r\n  });\r\n  useEffect(() => {\r\n    fetch(\r\n      \"https://jihceventsapi-hpdng8h8e7eqhdbm.canadacentral-01.azurewebsites.net/api/events\"\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => setEvents(data))\r\n      .catch((error) => console.error(\"Error fetching events:\", error));\r\n  }, []);\r\n\r\n  // Function to handle event registration\r\n  const handleRegister = async (eventId) => {\r\n    try {\r\n      const userId = 1; // Placeholder: Replace with actual logged-in user ID\r\n      const response = await fetch(\r\n        \"https://jihceventsapi-hpdng8h8e7eqhdbm.canadacentral-01.azurewebsites.net/api/eventregistrations\",\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({ eventId, userId }),\r\n        }\r\n      );\r\n\r\n      if (response.ok) {\r\n        setRegisteredEvents((prev) => [...prev, eventId]); // Update the registered events list\r\n        alert(\"You have successfully registered for the event!\");\r\n      } else {\r\n        const errorData = await response.json();\r\n        alert(errorData.message || \"An error occurred.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error registering for the event:\", error);\r\n      alert(\"Something went wrong. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* Hero Section */}\r\n      <div className=\"hero\">\r\n        <h1 className=\"hero-title\">Welcome to JIHC Events</h1>\r\n        <p className=\"hero-subtitle\">Discover, learn, and connect.</p>\r\n      </div>\r\n\r\n      {/* Search Section */}\r\n      <div className=\"search-section\">\r\n        {/* Event Title */}\r\n        <input\r\n          type=\"text\"\r\n          name=\"title\"\r\n          value={searchParams.title}\r\n          onChange={handleInputChange}\r\n          placeholder=\"Enter event name\"\r\n          className=\"search-input\"\r\n        />\r\n\r\n        {/* Event Type Dropdown */}\r\n        <select\r\n          name=\"type\"\r\n          value={searchParams.type}\r\n          onChange={handleInputChange}\r\n          className=\"filter-dropdown\"\r\n        >\r\n          <option value=\"\">Select Event Type</option>\r\n          {eventTypes.map((type, index) => (\r\n            <option key={index} value={type}>\r\n              {type}\r\n            </option>\r\n          ))}\r\n        </select>\r\n\r\n        {/* Location Dropdown */}\r\n        <select\r\n          name=\"location\"\r\n          value={searchParams.location}\r\n          onChange={handleInputChange}\r\n          className=\"filter-dropdown\"\r\n        >\r\n          <option value=\"\">Select Location</option>\r\n          {locations.map((location, index) => (\r\n            <option key={index} value={location}>\r\n              {location}\r\n            </option>\r\n          ))}\r\n        </select>\r\n\r\n        {/* Event Date */}\r\n        <input\r\n          type=\"date\"\r\n          name=\"date\"\r\n          value={searchParams.date}\r\n          onChange={handleInputChange}\r\n          className=\"search-input\"\r\n        />\r\n\r\n        {/* Search Button */}\r\n        <button onClick={handleSearch} className=\"search-btn\">\r\n          Search\r\n        </button>\r\n      </div>\r\n\r\n      {/* Events Section */}\r\n      <div className=\"events-container\">\r\n        {events.map((event) => {\r\n          const isRegistered = registeredEvents.includes(event.id);\r\n          const progressPercent = (event.attendees / event.maxAttendees) * 100;\r\n\r\n          return (\r\n            <div key={event.id} className=\"event-card\">\r\n              {/* Image with Badge */}\r\n              <img\r\n                src={event.image}\r\n                alt={event.title}\r\n                className=\"event-image\"\r\n              />\r\n              <div className=\"image-badge\">{event.price}</div>\r\n\r\n              {/* Event Details */}\r\n              <div className=\"event-details\">\r\n                <h3 className=\"event-title\">{event.title}</h3>\r\n\r\n                {/* Inline Date and Location */}\r\n                <div className=\"event-inline\">\r\n                  <div className=\"event-date\">\r\n                    <i className=\"fa fa-calendar\" aria-hidden=\"true\"></i>\r\n                    {event.date}\r\n                  </div>\r\n                  <div className=\"event-location\">\r\n                    <i className=\"fa fa-map-marker\" aria-hidden=\"true\"></i>\r\n                    {event.location}\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"event-audience\">{event.audience}</div>\r\n\r\n                {/* Progress Bar */}\r\n                <div className=\"progress-bar-container\">\r\n                  <div\r\n                    className=\"progress-fill\"\r\n                    style={{\r\n                      width: `${progressPercent}%`,\r\n                    }}\r\n                  ></div>\r\n                </div>\r\n                <p className=\"progress-info\">\r\n                  {event.attendees}/{event.maxAttendees} Attendees\r\n                </p>\r\n\r\n                {/* Register Button */}\r\n                {isRegistered ? (\r\n                  <button className=\"register-button registered\" disabled>\r\n                    Registered\r\n                  </button>\r\n                ) : (\r\n                  <button\r\n                    className=\"register-button\"\r\n                    onClick={() => handleRegister(event.id)}\r\n                    disabled={event.attendees >= event.maxAttendees}\r\n                  >\r\n                    {event.attendees >= event.maxAttendees\r\n                      ? \"Event Full\"\r\n                      : \"Register Now\"}\r\n                  </button>\r\n                )}\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React, { useState } from \"react\";\r\n\r\nconst CreateEventModal = ({ onClose, onEventCreated }) => {\r\n  const [formData, setFormData] = useState({\r\n    title: \"\",\r\n    type: \"\",\r\n    date: \"\",\r\n    location: \"\",\r\n    price: \"\",\r\n    deadline: \"\",\r\n    audience: \"Student\",\r\n    description: \"\",\r\n    image: \"\",\r\n    maxAttendees: 50,\r\n  });\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prevData) => ({ ...prevData, [name]: value }));\r\n  };\r\n\r\n  const handleFormSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const userId = localStorage.getItem(\"userId\");\r\n    if (!userId) {\r\n      alert(\"User ID is missing. Please log in again.\");\r\n      return;\r\n    }\r\n\r\n    const eventDataWithOrganizer = {\r\n      ...formData, // Corrected from eventData to formData\r\n      organizerId: parseInt(userId), // Save userId as the organizer\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(\r\n        \"https://jihceventsapi-hpdng8h8e7eqhdbm.canadacentral-01.azurewebsites.net/api/events\",\r\n        {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify(eventDataWithOrganizer),\r\n        }\r\n      );\r\n\r\n      if (response.ok) {\r\n        const newEvent = await response.json();\r\n        alert(\"Event created successfully!\");\r\n        onEventCreated(newEvent); // Send the created event back to Profile.js\r\n        onClose(); // Close the modal\r\n      } else {\r\n        const errorData = await response.json();\r\n        alert(errorData.message || \"Failed to create the event.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error creating event:\", error);\r\n      alert(\"Something went wrong. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"modal-overlay\">\r\n      <div className=\"modal create-event-modal\">\r\n        <button className=\"close-btn\" onClick={onClose}>\r\n          ✕\r\n        </button>\r\n\r\n        <h2 className=\"modal-title\">Create New Event</h2>\r\n        <div className=\"modal-content\">\r\n          <form onSubmit={handleFormSubmit} className=\"create-event-form\">\r\n            <div className=\"form-section\">\r\n              <div className=\"form-column\">\r\n                <div className=\"input-group\">\r\n                  <label htmlFor=\"title\">Event Title</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"title\"\r\n                    name=\"title\"\r\n                    value={formData.title}\r\n                    onChange={handleInputChange}\r\n                    required\r\n                  />\r\n                </div>\r\n                <div className=\"input-group\">\r\n                  <label htmlFor=\"type\">Event Type</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"type\"\r\n                    name=\"type\"\r\n                    value={formData.type}\r\n                    onChange={handleInputChange}\r\n                    required\r\n                  />\r\n                </div>\r\n                <div className=\"input-group\">\r\n                  <label htmlFor=\"date\">Date</label>\r\n                  <input\r\n                    type=\"date\"\r\n                    id=\"date\"\r\n                    name=\"date\"\r\n                    value={formData.date}\r\n                    onChange={handleInputChange}\r\n                    required\r\n                  />\r\n                </div>\r\n                <div className=\"input-group\">\r\n                  <label htmlFor=\"location\">Location</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"location\"\r\n                    name=\"location\"\r\n                    value={formData.location}\r\n                    onChange={handleInputChange}\r\n                    required\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"form-column\">\r\n                <div className=\"input-group\">\r\n                  <label htmlFor=\"price\">Price</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"price\"\r\n                    name=\"price\"\r\n                    value={formData.price}\r\n                    onChange={handleInputChange}\r\n                    required\r\n                  />\r\n                </div>\r\n                <div className=\"input-group\">\r\n                  <label htmlFor=\"deadline\">Registration Deadline</label>\r\n                  <input\r\n                    type=\"date\"\r\n                    id=\"deadline\"\r\n                    name=\"deadline\"\r\n                    value={formData.deadline}\r\n                    onChange={handleInputChange}\r\n                    required\r\n                  />\r\n                </div>\r\n                <div className=\"input-group\">\r\n                  <label htmlFor=\"audience\">Audience</label>\r\n                  <select\r\n                    id=\"audience\"\r\n                    name=\"audience\"\r\n                    value={formData.audience}\r\n                    onChange={handleInputChange}\r\n                    required\r\n                  >\r\n                    <option value=\"Student\">Student</option>\r\n                    <option value=\"Teacher\">Teacher</option>\r\n                    <option value=\"All\">All</option>\r\n                  </select>\r\n                </div>\r\n                <div className=\"input-group\">\r\n                  <label htmlFor=\"maxAttendees\">Max Attendees</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    id=\"maxAttendees\"\r\n                    name=\"maxAttendees\"\r\n                    value={formData.maxAttendees}\r\n                    onChange={handleInputChange}\r\n                    required\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"input-group\">\r\n              <label htmlFor=\"description\">Description</label>\r\n              <textarea\r\n                id=\"description\"\r\n                name=\"description\"\r\n                value={formData.description}\r\n                onChange={handleInputChange}\r\n                rows=\"4\"\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"input-group\">\r\n              <label htmlFor=\"image\">Image URL</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"image\"\r\n                name=\"image\"\r\n                value={formData.image}\r\n                onChange={handleInputChange}\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"form-buttons\">\r\n              <button type=\"button\" className=\"cancel-btn\" onClick={onClose}>\r\n                Cancel\r\n              </button>\r\n              <button type=\"submit\" className=\"submit-btn\">\r\n                Create Event\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateEventModal;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport CreateEventModal from \"../components/CreateEventModal\";\r\n\r\nconst Profile = () => {\r\n  const [userData, setUserData] = useState(null);\r\n  const [userEvents, setUserEvents] = useState([]);\r\n  const [registeredEvents, setRegisteredEvents] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [isUpdateModalOpen, setIsUpdateModalOpen] = useState(false);\r\n  const [eventToUpdate, setEventToUpdate] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  // Get userId from localStorage\r\n  const userId = localStorage.getItem(\"userId\");\r\n\r\n  // Redirect to home if userId is not available\r\n  useEffect(() => {\r\n    if (!userId) {\r\n      console.warn(\"UserId is null, redirecting to home page...\");\r\n      navigate(\"/\");\r\n    }\r\n  }, [userId, navigate]);\r\n\r\n  // Fetch user data and events\r\n  useEffect(() => {\r\n    if (!userId) return;\r\n\r\n    const fetchUserData = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          `https://jihceventsapi-hpdng8h8e7eqhdbm.canadacentral-01.azurewebsites.net/api/users/${userId}`\r\n        );\r\n\r\n        if (!response.ok) {\r\n          throw new Error(\"Failed to fetch user data.\");\r\n        }\r\n\r\n        const userData = await response.json();\r\n        setUserData(userData);\r\n\r\n        const allEventsResponse = await fetch(\r\n          `https://jihceventsapi-hpdng8h8e7eqhdbm.canadacentral-01.azurewebsites.net/api/events`\r\n        );\r\n        const allEventsData = await allEventsResponse.json();\r\n        const userOrganizedEvents = allEventsData.filter(\r\n          (event) => event.organizerId === parseInt(userId)\r\n        );\r\n        setUserEvents(userOrganizedEvents);\r\n      } catch (error) {\r\n        console.error(\"Error fetching user data:\", error);\r\n        setError(\"Failed to load user data.\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchUserData();\r\n  }, [userId]);\r\n\r\n  // Open/close modals\r\n  const handleOpenCreateModal = () => setIsModalOpen(true);\r\n  const handleCloseCreateModal = () => setIsModalOpen(false);\r\n  const handleOpenUpdateModal = (event) => {\r\n    setEventToUpdate(event);\r\n    setIsUpdateModalOpen(true);\r\n  };\r\n  const handleCloseUpdateModal = () => setIsUpdateModalOpen(false);\r\n\r\n  // Handle new event creation\r\n  const handleEventCreated = (newEvent) => {\r\n    if (newEvent) {\r\n      setUserEvents((prevEvents) => [...prevEvents, newEvent]); // Add the new event to the existing list\r\n    } else {\r\n      console.warn(\"No event data returned from CreateEventModal.\");\r\n    }\r\n  };\r\n\r\n  // Handle event update\r\n  const handleEventUpdated = (updatedEvent) => {\r\n    if (updatedEvent) {\r\n      setUserEvents((prevEvents) =>\r\n        prevEvents.map((event) =>\r\n          event.id === updatedEvent.id ? updatedEvent : event\r\n        )\r\n      );\r\n    }\r\n  };\r\n\r\n  // Handle event deletion\r\n  const handleDeleteEvent = async (eventId) => {\r\n    try {\r\n      const response = await fetch(\r\n        `https://jihceventsapi-hpdng8h8e7eqhdbm.canadacentral-01.azurewebsites.net/api/events/${eventId}`,\r\n        { method: \"DELETE\" }\r\n      );\r\n      if (response.ok) {\r\n        alert(\"Event deleted successfully!\");\r\n        setUserEvents((prev) => prev.filter((event) => event.id !== eventId));\r\n      } else {\r\n        alert(\"Failed to delete event.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error deleting event:\", error);\r\n      alert(\"An error occurred while trying to delete the event.\");\r\n    }\r\n  };\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n  if (error) return <div>{error}</div>;\r\n\r\n  return (\r\n    <div className=\"profile-page\">\r\n      <h1>Welcome, {userData.name}!</h1>\r\n\r\n      {userData.userType === \"Teacher\" && (\r\n        <button onClick={handleOpenCreateModal}>Create Event</button>\r\n      )}\r\n\r\n      {isModalOpen && (\r\n        <CreateEventModal\r\n          onClose={handleCloseCreateModal}\r\n          onEventCreated={handleEventCreated}\r\n        />\r\n      )}\r\n\r\n      {isUpdateModalOpen && (\r\n        <CreateEventModal\r\n          onClose={handleCloseUpdateModal}\r\n          onEventCreated={handleEventUpdated}\r\n          existingEvent={eventToUpdate}\r\n        />\r\n      )}\r\n\r\n      <h2>Your Created Events</h2>\r\n      {userEvents.length > 0 ? (\r\n        userEvents.map((event) => (\r\n          <div key={event.id} className=\"event-card\">\r\n            <h3>{event.title}</h3>\r\n            <p>Location: {event.location}</p>\r\n            <p>Date: {event.date}</p>\r\n            <button onClick={() => handleOpenUpdateModal(event)}>Update</button>\r\n            <button onClick={() => handleDeleteEvent(event.id)}>Delete</button>\r\n          </div>\r\n        ))\r\n      ) : (\r\n        <p>You have not created any events yet.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React, { useState } from \"react\";\r\n\r\nconst SignInModal = ({ onClose, setIsLoggedIn, setUserName }) => {\r\n  const [formData, setFormData] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prevData) => ({ ...prevData, [name]: value }));\r\n  };\r\n\r\n  const handleFormSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const response = await fetch(\r\n        \"https://jihceventsapi-hpdng8h8e7eqhdbm.canadacentral-01.azurewebsites.net/api/users\"\r\n      );\r\n      const users = await response.json();\r\n\r\n      // Find user matching email and password\r\n      const user = users.find(\r\n        (user) =>\r\n          user.email === formData.email && user.password === formData.password\r\n      );\r\n\r\n      if (user) {\r\n        console.log(\"User found!\", user);\r\n        setIsLoggedIn(true);\r\n        setUserName(user.name);\r\n        localStorage.setItem(\"userId\", user.id);\r\n        onClose();\r\n      } else {\r\n        alert(\"Invalid email or password.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error signing in:\", error);\r\n      alert(\"Something went wrong. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"modal-overlay\">\r\n      <div className=\"modal\">\r\n        <button className=\"close-btn\" onClick={onClose}>\r\n          ✕\r\n        </button>\r\n\r\n        <div className=\"modal-content\">\r\n          <h2 className=\"modal-title\">Welcome Back!</h2>\r\n          <p className=\"modal-subtitle\">\r\n            Sign in to discover and register for JIHC Events.\r\n          </p>\r\n\r\n          <form onSubmit={handleFormSubmit} className=\"modal-form\">\r\n            <div className=\"input-group\">\r\n              <label htmlFor=\"email\">Email</label>\r\n              <input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                id=\"email\"\r\n                placeholder=\"example@email.com\"\r\n                value={formData.email}\r\n                onChange={handleInputChange}\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <div className=\"input-group\">\r\n              <label htmlFor=\"password\">Password</label>\r\n              <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                id=\"password\"\r\n                placeholder=\"Enter your password\"\r\n                value={formData.password}\r\n                onChange={handleInputChange}\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <button type=\"submit\" className=\"submit-btn\">\r\n              Sign In\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignInModal;\r\n","import React, { useState } from \"react\";\r\n\r\nconst SignUpModal = ({ onClose, setIsLoggedIn, setUserName }) => {\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    userType: \"Student\",\r\n  });\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prevData) => ({ ...prevData, [name]: value }));\r\n  };\r\n\r\n  const handleFormSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const response = await fetch(\r\n        \"https://jihceventsapi-hpdng8h8e7eqhdbm.canadacentral-01.azurewebsites.net/api/users\",\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(formData),\r\n        }\r\n      );\r\n\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        setIsLoggedIn(true);\r\n        setUserName(data.name);\r\n        localStorage.setItem(\"userId\", data.id);\r\n        onClose();\r\n      } else {\r\n        alert(data.message || \"Sign-up failed. Please try again.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error signing up:\", error);\r\n      alert(\"Something went wrong. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"modal-overlay\">\r\n      <div className=\"modal\">\r\n        <button className=\"close-btn\" onClick={onClose}>\r\n          ✕\r\n        </button>\r\n\r\n        <div className=\"modal-content\">\r\n          <h2 className=\"modal-title\">Create an Account</h2>\r\n          <p className=\"modal-subtitle\">\r\n            Join our community of event-goers and explore amazing events!\r\n          </p>\r\n\r\n          <form onSubmit={handleFormSubmit} className=\"modal-form\">\r\n            <div className=\"input-group\">\r\n              <label htmlFor=\"name\">Full Name</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                id=\"name\"\r\n                placeholder=\"John Doe\"\r\n                value={formData.name}\r\n                onChange={handleInputChange}\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <div className=\"input-group\">\r\n              <label htmlFor=\"email\">Email</label>\r\n              <input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                id=\"email\"\r\n                placeholder=\"example@email.com\"\r\n                value={formData.email}\r\n                onChange={handleInputChange}\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <div className=\"input-group\">\r\n              <label htmlFor=\"password\">Password</label>\r\n              <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                id=\"password\"\r\n                placeholder=\"Enter your password\"\r\n                value={formData.password}\r\n                onChange={handleInputChange}\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <div className=\"input-group\">\r\n              <label htmlFor=\"userType\">User Type</label>\r\n              <select\r\n                name=\"userType\"\r\n                id=\"userType\"\r\n                value={formData.userType}\r\n                onChange={handleInputChange}\r\n                required\r\n              >\r\n                <option value=\"Student\">Student</option>\r\n                <option value=\"Teacher\">Teacher</option>\r\n                <option value=\"Other\">Other</option>\r\n              </select>\r\n            </div>\r\n\r\n            <button type=\"submit\" className=\"submit-btn\">\r\n              Sign Up\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUpModal;\r\n","import React, { useState } from \"react\";\r\nimport SignInModal from \"./SignIn\";\r\nimport SignUpModal from \"./SignUp\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = () => {\r\n  const [isSignInOpen, setIsSignInOpen] = useState(false);\r\n  const [isSignUpOpen, setIsSignUpOpen] = useState(false);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [userName, setUserName] = useState(\"\");\r\n\r\n  const handleSignInClick = () => {\r\n    setIsSignInOpen(true);\r\n  };\r\n\r\n  const handleSignUpClick = () => {\r\n    setIsSignUpOpen(true);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    setIsLoggedIn(false);\r\n    setUserName(\"\");\r\n    localStorage.removeItem(\"userId\"); // Remove user from local storage\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <header className=\"header\">\r\n        {\" \"}\r\n        <Link to={\"/\"}>\r\n          <div className=\"logo\">\r\n            <img src=\"/jihc-logo-v1.png\" alt=\"JIHC Events Logo\" />\r\n          </div>\r\n        </Link>\r\n        <div className=\"auth-buttons\">\r\n          {!isLoggedIn ? (\r\n            <>\r\n              <button onClick={handleSignInClick} className=\"btn sign-in-btn\">\r\n                Sign In\r\n              </button>\r\n              <button onClick={handleSignUpClick} className=\"btn sign-up-btn\">\r\n                Sign Up\r\n              </button>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Link to=\"/profile\" className=\"btn profile-btn\">\r\n                Profile\r\n              </Link>\r\n\r\n              <button onClick={handleLogout} className=\"btn logout-btn\">\r\n                Logout\r\n              </button>\r\n            </>\r\n          )}\r\n        </div>\r\n        {/* Sign In Modal */}\r\n        {isSignInOpen && (\r\n          <SignInModal\r\n            onClose={() => setIsSignInOpen(false)}\r\n            setIsLoggedIn={setIsLoggedIn}\r\n            setUserName={setUserName}\r\n          />\r\n        )}\r\n        {/* Sign Up Modal */}\r\n        {isSignUpOpen && (\r\n          <SignUpModal\r\n            onClose={() => setIsSignUpOpen(false)}\r\n            setIsLoggedIn={setIsLoggedIn}\r\n            setUserName={setUserName}\r\n          />\r\n        )}\r\n      </header>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"footer\">\r\n      {/* Top Section with Logo and Social Icons */}\r\n      <div className=\"footer-top\">\r\n        <div className=\"footer-logo\">\r\n          <h2>JIHC College</h2>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Middle Section with Contact Info */}\r\n      <div className=\"footer-contact\">\r\n        <div className=\"footer-contact-item\">\r\n          <p>123 JIHC Street, Main City, Country</p>\r\n        </div>\r\n        <div className=\"footer-contact-item\">\r\n          <p>+123 456 789</p>\r\n        </div>\r\n        <div className=\"footer-contact-item\">\r\n          <p>info@jihccollege.edu</p>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Bottom Section with Links and Copyright */}\r\n      <div className=\"footer-bottom\">\r\n        <ul className=\"footer-links\">\r\n          <li>\r\n            <a href=\"#about\">About Us</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#contact\">Contact</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#privacy\">Privacy Policy</a>\r\n          </li>\r\n        </ul>\r\n        <p className=\"copyright\">\r\n          © {new Date().getFullYear()} JIHC College. All rights reserved.\r\n        </p>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\n\r\nconst UpdateEvent = () => {\r\n  const { eventId } = useParams(); // Get the event ID from the URL\r\n  const [eventData, setEventData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    // Fetch the current event data using the event ID\r\n    const fetchEvent = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          `https://jihceventsapi-hpdng8h8e7eqhdbm.canadacentral-01.azurewebsites.net/api/events/${eventId}`\r\n        );\r\n\r\n        if (!response.ok) {\r\n          throw new Error(\"Failed to fetch event data.\");\r\n        }\r\n\r\n        const data = await response.json();\r\n        setEventData(data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching event data:\", error);\r\n        setError(\"Failed to load event data.\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchEvent();\r\n  }, [eventId]);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setEventData((prevData) => ({ ...prevData, [name]: value }));\r\n  };\r\n\r\n  const handleFormSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const response = await fetch(\r\n        `https://jihceventsapi-hpdng8h8e7eqhdbm.canadacentral-01.azurewebsites.net/api/events/${eventId}`,\r\n        {\r\n          method: \"PUT\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify(eventData),\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to update event.\");\r\n      }\r\n\r\n      alert(\"Event updated successfully!\");\r\n      navigate(\"/profile\"); // Redirect back to the profile page\r\n    } catch (error) {\r\n      console.error(\"Error updating event:\", error);\r\n      alert(\"Failed to update the event. Please try again.\");\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div className=\"error-message\">{error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"update-event-page\">\r\n      <h1>Update Event</h1>\r\n      <form onSubmit={handleFormSubmit}>\r\n        <div className=\"input-group\">\r\n          <label htmlFor=\"title\">Title</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"title\"\r\n            value={eventData.title}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div className=\"input-group\">\r\n          <label htmlFor=\"type\">Type</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"type\"\r\n            value={eventData.type}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div className=\"input-group\">\r\n          <label htmlFor=\"date\">Date</label>\r\n          <input\r\n            type=\"date\"\r\n            name=\"date\"\r\n            value={eventData.date}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div className=\"input-group\">\r\n          <label htmlFor=\"location\">Location</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"location\"\r\n            value={eventData.location}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div className=\"input-group\">\r\n          <label htmlFor=\"price\">Price</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"price\"\r\n            value={eventData.price}\r\n            onChange={handleInputChange}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"input-group\">\r\n          <label htmlFor=\"description\">Description</label>\r\n          <textarea\r\n            name=\"description\"\r\n            value={eventData.description}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <button type=\"submit\">Update Event</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateEvent;\r\n","import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport HomePage from \"./pages/HomePage\";\nimport Profile from \"./pages/Profile\";\nimport SignIn from \"./components/SignIn\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport \"./App.css\";\nimport SignUp from \"./components/SignUp\";\nimport UpdateEvent from \"./components/UpdateEvent\";\nconst App = () => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userId, setUserId] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [isSignUp, setIsSignUp] = useState(true);\n\n  const handleLogin = (id) => {\n    setUserId(id);\n    setIsLoggedIn(true);\n    localStorage.setItem(\"userId\", id);\n  };\n\n  const handleLogout = () => {\n    setUserId(null);\n    setIsLoggedIn(false);\n    localStorage.removeItem(\"userId\");\n  };\n\n  // Load the user's login state from localStorage\n  useEffect(() => {\n    const savedUserId = localStorage.getItem(\"userId\");\n    if (savedUserId) {\n      setUserId(savedUserId);\n      setIsLoggedIn(true);\n    }\n  }, []);\n\n  const handleCloseModal = () => {\n    setShowModal(false);\n  };\n\n  return (\n    <Router>\n      <Header />\n\n      <Routes>\n        <Route path=\"/\" element={<HomePage />} />\n        <Route path=\"/profile\" element={<Profile userId={userId} />} />\n        <Route\n          path=\"/sign-in\"\n          element={<SignIn onClose={handleCloseModal} />}\n        />\n        <Route\n          path=\"/sign-up\"\n          element={<SignUp onClose={handleCloseModal} />}\n        />\n        <Route path=\"/update-event/:eventId\" element={<UpdateEvent />} />\n      </Routes>\n\n      <Footer />\n    </Router>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n"],"sourceRoot":""}